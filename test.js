const assert = require('assert');
const BSON = require('bson');
const { Lambdash } = require('.');

let params = null;
params = Lambdash.determineParams({ foo: 'Int32' }, ['foo']);
assert.strictEqual(params.paramsQueryString, 'foo=<Int32>');
assert.strictEqual(params.params.foo, 'Int32');
params = Lambdash.determineParams({}, ['bar']);
assert.strictEqual(params.paramsQueryString, 'bar=<String>');
assert.strictEqual(params.params.bar, 'String');
params = Lambdash.determineParams({ xyz: BSON.Long }, ['xyz']);
assert.strictEqual(params.paramsQueryString, 'xyz=<Long>');
assert.strictEqual(params.params.xyz, 'Long');
params = Lambdash.determineParams({ xyz: BSON.Long }, ['xyz', 'hkj']);
assert.ok(params.paramsQueryString.includes('hkj=<String>'));
assert.ok(params.paramsQueryString.includes('xyz=<Long>'));
assert.ok(params.paramsQueryString.includes('&'));
assert.strictEqual(params.params.xyz, 'Long');
assert.strictEqual(params.params.hkj, 'String');
